@model Domain.Entities.Carriage

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@Html.AntiForgeryToken()


<div class="navbar navbar-inverse" role="navigation">

    <a class="navbar-brand" href="@Url.Action("List","Person")">Aplikacja</a>
    <ul class="nav navbar-nav">
        <li>@Html.ActionLink("About", "About", "Navigator")</li>
        <li>@Html.ActionLink("Contact", "Contact", "Navigator")</li>
    </ul>
</div>

<div class="panel">
    <div class="panel-heading">

    </div>
    @Html.AntiForgeryToken()






    <div class="row">
        <div class="col-xs-2">

            <ul class="nav nav-pills nav-stacked span3">
                <li class="nav-link active"><a href="#">CRM</a></li>
                <li>@Html.ActionLink("Kontrahent", "Index", "Admin")</li>
                <li>@Html.ActionLink("Magazyny", "Index", "Warehouses")</li>
                <li>@Html.ActionLink("Transport", "Index", "Transportfleet")</li>
                <li>@Html.ActionLink("Przesyłka", "Index", "Packs")</li>
                <li>@Html.ActionLink("Przewoz", "Index", "Carriage")</li>

            </ul>

        </div>
        <div class="col-xs-10">

            <ul class="nav nav-tabs"></ul>
            @using (Html.BeginForm("Create", "Carriage", FormMethod.Post))
            {
                <div class="panel-body">
                   @* @Html.HiddenFor(m => m.CarriageID) *@

                    @Html.AntiForgeryToken()


                    <div class="form-group">
                        @Html.LabelFor(model => model.Target, new { @class = "control-label col-md-7" })

                        @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })




                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WarehousesID, new { @class = "control-label col-md-7" })

                        @Html.DropDownList("WarehousesID", null, htmlAttributes: new { @class = "form-control" })




                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.TranID, new { @class = "control-label col-md-7" })

                        @Html.DropDownList("TranID", null, htmlAttributes: new { @class = "form-control" })




                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.zamierzonadatawyslania, new { @class = "control-label col-md-7" })

                        @Html.EditorFor(model => model.zamierzonadatawyslania, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.zamierzonadatawyslania, "", new { @class = "text-danger" })




                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.rzeczywistadatawyslania, new { @class = "control-label col-md-7" })

                        @Html.EditorFor(model => model.rzeczywistadatawyslania, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.rzeczywistadatawyslania, "", new { @class = "text-danger" })




                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerDescription, new { @class = "control-label col-md-7" })
                        
                        @Html.EditorFor(model => model.OwnerDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OwnerDescription, "", new { @class = "text-danger" })




                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <table>
                                <tr>
                                    @{
                                        int cnt = 0;
                                        List<WebUi.ViewModel.AssignedPacksData> packs = ViewBag.Packss;

                                        foreach (var course in packs)
                                        {
                                            if (cnt++ % 3 == 0)
                                            {
                                                @:</tr><tr>




                                            }

                                            @:<td>
                                                <input type="checkbox"
                                                       name="selectedPacks"
                                                       value="@course.PacksID"
                                                       @(Html.Raw(course.Assigned ? "checked=\"checked\"" : "")) />
                                                @course.PacksID  @: @course.Name
                                                @:</td>


                                        }

                                        @:</tr>
                                    }
                                </table>
                            </div>
                        </div>




                    </div>

                    <div class="panel-footer">
                        <input type="submit" value="Zapisz" class="btn btn-primary" />
                        @Html.ActionLink("Anuluj i wróć do listy", "Index", null, new
                   {
                       @class = "btn btn-default"
                   })
                    </div>
                                        }
        </div>
    </div>
</div>


@section Scripts {
   @Scripts.Render("~/bundles/jqueryval")
}








